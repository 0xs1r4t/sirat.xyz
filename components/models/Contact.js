import React, { Suspense, useEffect, useRef, useState } from "react";
import { Canvas } from "@react-three/fiber";
import {
   Environment,
   OrbitControls,
   Preload,
   useAnimations,
   useGLTF,
   Stats,
} from "@react-three/drei";
import {
   Bloom,
   ChromaticAberration,
   EffectComposer,
   Noise,
   SSAO,
} from "@react-three/postprocessing";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Model created by: Sirat Baweja (https://github.com/0xs1r4t)
*/

const Model = ({ ...props }) => {
   const group = useRef();
   const { nodes, materials, animations } = useGLTF("/models/contact.glb");
   const { actions } = useAnimations(animations, group);

   useEffect(() => {
      console.log(actions);
      actions.flip.play();
   });

   return (
      <group ref={group} {...props} dispose={null}>
         <group name="Scene">
            <mesh
               name="phoneBottom"
               geometry={nodes.phoneBottom.geometry}
               material={materials["phone metal"]}
               position={[0, -0.64, 0.35]}
               rotation={[-Math.PI / 2, 0, 0]}
               scale={[1, 1, 0.16]}
               userData={{ name: "phoneBottom" }}
            />
            <mesh
               name="phoneTop"
               geometry={nodes.phoneTop.geometry}
               material={materials["phone top metal"]}
               position={[0, -0.46, -0.66]}
               rotation={[2.09, 0, 0]}
               scale={[0.97, 0.89, 0.16]}
               userData={{ name: "phoneTop" }}
            />
            <mesh
               name="phoneButton"
               geometry={nodes.phoneButton.geometry}
               material={nodes.phoneButton.material}
               position={[0, -0.48, 0.57]}
               scale={[0.36, 0.08, 0.36]}
               userData={{ name: "phoneButton" }}
            />
            <mesh
               name="phoneMiddle"
               geometry={nodes.phoneMiddle.geometry}
               material={nodes.phoneMiddle.material}
               position={[0, -0.62, -0.66]}
               rotation={[-Math.PI / 2, 0, -Math.PI / 2]}
               scale={[0.25, 0.74, 0.25]}
               userData={{ name: "phoneMiddle" }}
            />
         </group>
      </group>
   );
};

useGLTF.preload("/models/contact.glb");

// the canvas -- rough
const Contact = () => {
   return (
      <Canvas concurrent>
         <ambientLight />
         <directionalLight position={[20, 10, 20]} color="white" />
         <Suspense fallback={null}>
            <Environment background={false} files="textures/holographic.hdr" />
            <Model />

            {/* filters */}
            <EffectComposer>
               <Bloom />
               <SSAO />
               <Preload all />
            </EffectComposer>
         </Suspense>
         <OrbitControls regress />
         <Stats />
      </Canvas>
   );
};

export default Contact;
