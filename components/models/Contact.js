import React, { Suspense, useEffect, useRef, useState } from "react";
import { Canvas } from "@react-three/fiber";
import {
   Environment,
   OrbitControls,
   Preload,
   useAnimations,
   useGLTF,
   Stats,
} from "@react-three/drei";
import {
   Bloom,
   ChromaticAberration,
   EffectComposer,
   Noise,
   SSAO,
} from "@react-three/postprocessing";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Model created by: Sirat Baweja (https://github.com/0xs1r4t)
*/

const Model = ({ ...props }) => {
   const group = useRef();
   const { nodes, materials, animations } = useGLTF("/models/contact.glb");
   const { actions } = useAnimations(animations, group);
   return (
      <group ref={group} {...props} dispose={null}>
         <group name="Scene">
            <group
               name="Light"
               position={[4.08, 4.9, -1.01]}
               rotation={[1.89, 0.88, -2.05]}
               userData={{ name: "Light" }}
            />
            <group
               name="Camera"
               position={[6.34, 5.81, 7.26]}
               rotation={[1.17, 0.35, -0.69]}
               userData={{ name: "Camera" }}
            />
            <mesh
               name="phone_bottom"
               geometry={nodes.phone_bottom.geometry}
               material={materials["phone metal"]}
               position={[0, -0.64, 0.35]}
               rotation={[-Math.PI / 2, 0, 0]}
               scale={[1, 1, 0.16]}
               userData={{ name: "phone bottom" }}
            />
            <mesh
               name="phone_top"
               geometry={nodes.phone_top.geometry}
               material={materials["phone top metal"]}
               position={[0, -0.46, -0.66]}
               rotation={[2.09, 0, 0]}
               scale={[0.97, 0.89, 0.16]}
               userData={{ name: "phone top" }}
            />
            <mesh
               name="Cylinder"
               geometry={nodes.Cylinder.geometry}
               material={nodes.Cylinder.material}
               position={[0, -0.62, -0.66]}
               rotation={[-Math.PI / 2, 0, -Math.PI / 2]}
               scale={[0.25, 0.74, 0.25]}
               userData={{ name: "Cylinder" }}
            />
            <mesh
               name="Cylinder001"
               geometry={nodes.Cylinder001.geometry}
               material={nodes.Cylinder001.material}
               position={[0, -0.48, 0.57]}
               scale={[0.36, 0.08, 0.36]}
               userData={{ name: "Cylinder.001" }}
            />
         </group>
      </group>
   );
};

useGLTF.preload("/models/contact.glb");

// the canvas -- rough
function Contact() {
   return (
      <Canvas concurrent>
         <ambientLight />
         <directionalLight position={[20, 10, 20]} color="white" />
         <Suspense fallback={null}>
            {/* <Environment background={false} files="textures/cloudsss-pink.hdr" /> */}
            <Model />

            {/* filters */}
            <EffectComposer>
               <Bloom />
               <SSAO />
               <Preload all />
            </EffectComposer>
         </Suspense>
         <OrbitControls enablePan={true} enableZoom={true} enableRotate={true} autoRotate />
         <Stats />
      </Canvas>
   );
}

export default Contact;
